/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* merge(ListNode*a,ListNode*b){
        ListNode*r;
        if(a==NULL){
            return b;
        }
        else if(b==NULL){
            return a;
        }
        if(a->val <= b->val){
            r=a;
            a->next=merge(a->next,b);
        }
        else{
            r=b;
            b->next=merge(a,b->next);
        }
        return r;
    }
    
 ListNode* half(ListNode* x){
        ListNode * s=x,*f=x->next->next;
        while(f&&f->next){
            s=s->next;
            f=f->next->next;
        }
        return s;
    }
    
    ListNode* sortList(ListNode* head) {
       if(!head||!head->next)return head;
        ListNode* m=half(head);
        ListNode* r=sortList(m->next);
        m->next=NULL;
        ListNode* l=sortList(head);
        return merge(l,r);
    }
};
